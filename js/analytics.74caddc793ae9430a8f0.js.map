{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/components/BaseComponent.ts","webpack:///./src/ts/constants/newsApi.ts","webpack:///./src/ts/utils/dateHelper.ts","webpack:///./src/ts/constants/dateTime.ts","webpack:///./src/ts/components/Container.ts","webpack:///./src/ts/constants/news.ts","webpack:///./src/ts/modules/DataStorage.ts","webpack:///./src/ts/constants/dataStorage.ts","webpack:///./src/ts/utils/calculator.ts","webpack:///./src/pages/analytics/analytics.ts","webpack:///./src/blocks/digits/Digits.ts","webpack:///./src/blocks/daily/Daily.ts","webpack:///./src/blocks/table-row/TableRow.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","element","this","_element","NEWS_API_URL","NEWS_API_KEY","PAGE_SIZE","DAYS_AGO_COUNT","PUBLISHED_AT","REQUIRED_VALIDATE_INPUT_TEXT","BAD_NEWS_API_RESULT","NEWS_LANGUAGE","getDaysAgoString","now","Date","setDate","getDate","toISOString","getDateWithStringMonth","isoDate","date","QUESTION_RUSSIAN_MONTH_NAMES","getMonth","getFullYear","getFirstNewsMonth","articles","firstArticle","length","firstArticleMonth","publishedAt","RUSSIAN_MONTH_NAMES","compareDates","first","second","firstDate","secondDate","sortByDateDesc","sort","RUSSIAN_DAY_OF_WEEK_NAMES","Container","container","super","_container","items","forEach","item","appendChild","innerHTML","SHOWED_NEWS_PACK_SIZE","save","localStorage","setItem","JSON","stringify","load","parse","getItem","QUESTION","TOTAL_RESULTS","ARTICLES","DISPLAYED_COUNT","getCountInTitle","word","toLowerCase","regex","RegExp","reduce","sum","curr","title","split","getMatchesInArticle","article","count","description","getDisplayedCount","arrayLength","digitsNode","document","querySelector","dailyNode","tableNode","tableRowTemplate","content","tableContainer","digits","dataStorage","daily","table","countInTitle","setData","setMonth","rows","Array","dateTime","dayNumber","day","getDay","push","percent","getRows","j","fillCount","allMatchesCount","row","fillPercent","render","map","index","tableRow","setLastRowModificator","init","Digits","_titleNode","_countNode","_countInTitleNode","textContent","toString","Daily","monthNode","TableRow","newRow","cloneNode","setAttribute","classList","add","remove"],"mappings":"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","file":"js/analytics.74caddc793ae9430a8f0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","export default class BaseComponent {\r\n  protected _element: HTMLElement;\r\n\r\n  constructor(element: HTMLElement){\r\n    this._element = element;\r\n  }\r\n}\r\n","export const NEWS_API_URL = 'https://nomoreparties.co/news/v2/everything';\r\nexport const NEWS_API_KEY = '36d016b9c22e4779bda6ca662fc87eea';\r\nexport const PAGE_SIZE = 100;\r\nexport const DAYS_AGO_COUNT = 6;\r\nexport const PUBLISHED_AT = 'publishedAt';\r\nexport const REQUIRED_VALIDATE_INPUT_TEXT = 'Нужно ввести ключевое слово';\r\nexport const BAD_NEWS_API_RESULT = 'Во время запроса произошла ошибка. ' +\r\n  'Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз.';\r\nexport const NEWS_LANGUAGE = 'ru';\r\n","import { DAYS_AGO_COUNT } from \"../constants/newsApi\";\r\nimport { QUESTION_RUSSIAN_MONTH_NAMES, RUSSIAN_MONTH_NAMES } from \"../constants/dateTime\";\r\nimport { Article } from \"../types\";\r\n\r\nexport const getDaysAgoString = (): string => {\r\n  const now = new Date();\r\n  now.setDate(now.getDate() - DAYS_AGO_COUNT);\r\n  return now.toISOString();\r\n}\r\n\r\nexport const getDateWithStringMonth = (isoDate: Date): string => {\r\n  const date = new Date(isoDate);\r\n  const day = date.getDate();\r\n  const month = QUESTION_RUSSIAN_MONTH_NAMES[date.getMonth()];\r\n  const year = date.getFullYear();\r\n  return `${day} ${month}, ${year}`;\r\n}\r\n\r\n// на входе - отсортированный по убыванию дат массив новостей\r\nexport const getFirstNewsMonth = (articles: Article[]): string => {\r\n  const firstArticle = articles[articles.length - 1];\r\n  const firstArticleMonth = new Date(firstArticle.publishedAt).getMonth();\r\n  return RUSSIAN_MONTH_NAMES[firstArticleMonth];\r\n}\r\n\r\nconst compareDates = (first: Article, second: Article): number => {\r\n  const firstDate = first.publishedAt;\r\n  const secondDate = second.publishedAt;\r\n  if (firstDate > secondDate)\r\n    return 1;\r\n  else if (firstDate < secondDate)\r\n    return -1;\r\n  else\r\n    return 0;\r\n}\r\n\r\nexport const sortByDateDesc = (articles: Article[]): Article[] => {\r\n  return articles.sort(compareDates);\r\n}\r\n","export const QUESTION_RUSSIAN_MONTH_NAMES = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\",\r\n  \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\r\nexport const RUSSIAN_MONTH_NAMES = [\"январь\", \"февраль\", \"март\", \"апрель\", \"май\", \"июнь\",\r\n  \"июль\", \"август\", \"сентябрь\", \"октябрь\", \"ноябрь\", \"декабрь\"];\r\nexport const RUSSIAN_DAY_OF_WEEK_NAMES = [\"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\", \"вс\"];\r\n","import BaseComponent from \"./BaseComponent\";\r\nimport IContainer from \"../interfaces/IContainer\";\r\n\r\nexport default class Container extends BaseComponent implements IContainer{\r\n  private _container: HTMLElement;\r\n\r\n  constructor(container: HTMLElement, element: HTMLElement){\r\n    super(element);\r\n    this._container = container;\r\n  }\r\n\r\n  render(items: HTMLElement[]): void{\r\n    items.forEach(item => this._container.appendChild(item));\r\n  }\r\n\r\n  clear(){\r\n    this._container.innerHTML = '';\r\n  }\r\n}\r\n","export const SHOWED_NEWS_PACK_SIZE = 3;\r\n","export default class DataStorage{\r\n  save = (item: string, value: any): void => {\r\n    localStorage.setItem(item, JSON.stringify(value));\r\n  }\r\n\r\n  load = (item: string): any => JSON.parse(<string>localStorage.getItem(item));\r\n}\r\n","export const QUESTION = 'question';\r\nexport const TOTAL_RESULTS = 'totalResults';\r\nexport const ARTICLES = 'articles';\r\nexport const DISPLAYED_COUNT = 'displayedCount';\r\n","import { SHOWED_NEWS_PACK_SIZE } from \"../constants/news\";\r\nimport { Article } from \"../types\";\r\n\r\nexport const getCountInTitle = (articles: Article[], word: string): number => {\r\n  word = word.toLowerCase();\r\n  const regex = new RegExp(`${word}`, 'is');\r\n  return articles.reduce((sum, curr) =>\r\n  {\r\n    const title = curr.title.toLowerCase();\r\n    return sum + title.split(regex).length - 1;\r\n  },\r\n  0);\r\n}\r\n\r\nexport const getMatchesInArticle = (article: Article, word: string): number => {\r\n  word = word.toLowerCase();\r\n  const regex = new RegExp(`${word}`, 'is');\r\n  let count = article.title\r\n    ? article.title.toLowerCase().split(regex).length - 1\r\n    : 0;\r\n  count += article.description\r\n    ? article.description.toLowerCase().split(regex).length - 1\r\n    : 0;\r\n  return count;\r\n}\r\n\r\nexport const getDisplayedCount = (arrayLength: number, count: number) => {\r\n  return arrayLength - SHOWED_NEWS_PACK_SIZE >= count\r\n    ? count + SHOWED_NEWS_PACK_SIZE\r\n    : arrayLength;\r\n}\r\n","import './analytics.css';\r\nimport Digits from '../../blocks/digits/Digits';\r\nimport DataStorage from '../../ts/modules/DataStorage';\r\nimport { QUESTION, ARTICLES } from '../../ts/constants/dataStorage';\r\nimport { getCountInTitle, getMatchesInArticle } from '../../ts/utils/calculator';\r\nimport Daily from '../../blocks/daily/Daily';\r\nimport TableRow from '../../blocks/table-row/TableRow';\r\nimport Container from '../../ts/components/Container';\r\nimport { RUSSIAN_DAY_OF_WEEK_NAMES } from '../../ts/constants/dateTime';\r\nimport { DAYS_AGO_COUNT } from '../../ts/constants/newsApi';\r\nimport { Article, DayCountRow } from '../../ts/types';\r\n\r\nconst digitsNode = <HTMLElement>document.querySelector('.digits');\r\nconst dailyNode = <HTMLElement>document.querySelector('.daily');\r\nconst tableNode = <HTMLElement>document.querySelector('.table');\r\nconst rowTemplate = <HTMLTemplateElement>document.querySelector('#table-row-template');\r\nconst tableRowTemplate = <HTMLElement>rowTemplate.content.querySelector('.table-row');\r\nconst tableContainer = <HTMLElement>tableNode.querySelector('.table__container');\r\n\r\nconst digits = new Digits(digitsNode);\r\nconst dataStorage = new DataStorage();\r\nconst daily = new Daily(dailyNode);\r\nconst table = new Container(tableContainer, tableNode);\r\n\r\nfunction init(): void {\r\n  const title = dataStorage.load(QUESTION);\r\n  const articles = dataStorage.load(ARTICLES);\r\n  const countInTitle = getCountInTitle (articles, title);\r\n  digits.setData(title, articles.length, countInTitle);\r\n  daily.setMonth(articles);\r\n  const rows = getRows();\r\n  fillCount(articles, rows, title);\r\n  fillPercent(rows);\r\n  table.render(rows.map((row, index) => {\r\n    const tableRow = new TableRow(tableRowTemplate);\r\n    if (index === DAYS_AGO_COUNT)\r\n      tableRow.setLastRowModificator();\r\n    return tableRow.create(row);\r\n  } ));\r\n}\r\n\r\nfunction getRows(): DayCountRow[] {\r\n  const rows = new Array<DayCountRow>();\r\n  for (let i = DAYS_AGO_COUNT; i >= 0; i--){\r\n    const dateTime = new Date();\r\n    dateTime.setDate(dateTime.getDate() - i);\r\n    const dayNumber = dateTime.getDate();\r\n    const day = `${dayNumber}, ${RUSSIAN_DAY_OF_WEEK_NAMES[dateTime.getDay()]}`;\r\n    rows.push({ dayNumber, day, count: 0, percent: 0 });\r\n  }\r\n  return rows;\r\n}\r\n\r\nfunction fillCount(articles: Article[], rows: DayCountRow[], word: string){\r\n  for (let i = 0, j = rows.length - 1; i < articles.length; ){\r\n    const article = articles[i];\r\n    if (new Date(article.publishedAt).getDate() === rows[j].dayNumber){\r\n      rows[j].count += getMatchesInArticle(article, word)\r\n      i++;\r\n    }\r\n    else\r\n      j--;\r\n  }\r\n}\r\n\r\nfunction fillPercent(rows: DayCountRow[]): void {\r\n  const allMatchesCount = rows.reduce((sum, row) => sum + row.count, 0);\r\n  rows.forEach(row => row.percent = 100 - 100 / allMatchesCount * row.count);\r\n}\r\n\r\ninit();\r\n","import BaseComponent from \"../../ts/components/BaseComponent\";\r\n\r\nexport default class Digits extends BaseComponent{\r\n  private _titleNode: HTMLElement;\r\n  private _countNode: HTMLElement;\r\n  private _countInTitleNode: HTMLElement;\r\n\r\n  constructor(element: HTMLElement){\r\n    super(element);\r\n    this._titleNode = <HTMLElement>this._element.querySelector('.title');\r\n    this._countNode = <HTMLElement>this._element.querySelector('.digits__count');\r\n    this._countInTitleNode = <HTMLElement>this._element.querySelector('.digits__title-count');\r\n  }\r\n\r\n  setData(title: string, count: number, countInTitle: number){\r\n    this._titleNode.textContent = `Вы спросили: «${title}»`;\r\n    this._countNode.textContent = count.toString();\r\n    this._countInTitleNode.textContent = countInTitle.toString();\r\n  }\r\n}\r\n","import BaseComponent from \"../../ts/components/BaseComponent\";\r\nimport { getFirstNewsMonth } from \"../../ts/utils/dateHelper\";\r\nimport { Article } from \"../../ts/types\";\r\n\r\nexport default class Daily extends BaseComponent{\r\n  private monthNode: HTMLElement;\r\n\r\n  constructor(element: HTMLElement){\r\n    super(element);\r\n    this.monthNode = <HTMLElement>this._element.querySelector('#month');\r\n  }\r\n\r\n  setMonth(articles: Article[]){\r\n    this.monthNode.textContent = `Дата (${getFirstNewsMonth(articles)})`;\r\n  }\r\n}\r\n","import BaseComponent from \"../../ts/components/BaseComponent\";\r\nimport ITemplateElement from \"../../ts/interfaces/ITemplateElement\";\r\nimport { DayCountRow } from \"../../ts/types\";\r\n\r\nexport default class TableRow extends BaseComponent implements ITemplateElement {\r\n  constructor(element: HTMLElement){\r\n    super(element);\r\n  }\r\n\r\n  create({ day, count, percent }: DayCountRow){\r\n    const newRow = <HTMLElement>this._element.cloneNode(true);\r\n\r\n    const dayNode = <HTMLElement>newRow.querySelector('.table-row__first-column');\r\n    dayNode.textContent = day;\r\n\r\n    const percentNode = <HTMLElement>newRow.querySelector('.table-row__shifter');\r\n    percentNode.setAttribute('style', `width: ${percent}%`);\r\n\r\n    const countNode = <HTMLElement>newRow.querySelector('#count');\r\n    countNode.textContent = count.toString();\r\n\r\n    this._element = newRow;\r\n    return newRow;\r\n  }\r\n\r\n  setLastRowModificator(){\r\n    this._element.classList.add('table-row_margin-bottom_last');\r\n    this._element.classList.remove('table-row_margin-bottom');\r\n  }\r\n}\r\n"],"sourceRoot":""}